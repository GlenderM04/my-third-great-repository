trigger:
  branches:
    include:
      - master
    exclude:
      - development
 
variables:
  vmImageName: 'ubuntu-latest'
 
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
 
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'
 
    - script: |
        npm install
        npm run build
      displayName: 'npm install and build'
 
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
 
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop
 
# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#   - deployment: Deploy
#     displayName: Deploy
#     environment: $(environmentName)
#     pool:
#       vmImage: $(vmImageName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureWebApp@1
#             inputs:
#               azureSubscription: '$(azureSubscription)'
#               appType: 'webAppLinux'
#               appName: 'optiplanepn'
#               package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
#               runtimeStack: 'NODE|18-lts'
#               startUpCommand: 'pm2 start /home/site/wwwroot/ecosystem.config.js --no-daemon'