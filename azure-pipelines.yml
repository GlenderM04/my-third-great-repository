trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Define el detalle del servidor para la rama main
  mainServer: '52.165.128.155'
  mainKey: 'id_rsa'

  # Define el archivo docker-compose
  mainDockerComposeFile: 'docker-compose.yml'

steps:
  # Setup SSH para la rama main
  - task: InstallSSHKey@0
    displayName: 'Setup SSH for Main'
    condition: eq(variables['Build.SourceBranchName'], 'master')
    inputs:
      sshKeySecureFile: '$(mainKey)'  # Clave privada para main
      hostName: '$(mainServer)'

  # Agrega el host al archivo known_hosts para main
  - script: |
      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      ssh-keyscan -H $(mainServer) >> ~/.ssh/known_hosts
      chmod 644 ~/.ssh/known_hosts
    displayName: 'Add SSH Host to Known Hosts for Main'
    condition: eq(variables['Build.SourceBranchName'], 'master')

  # Ejecuta los comandos de despliegue para main
  - script: |
      ssh ubuntu@$(mainServer) << 'EOF'
        cd /home/ubuntu/skyproject/my-second-great-repository
        git pull origin master

        # Validar si la ruta existe
        if [ ! -d "/home/ubuntu/skyproject/my-second-great-repository" ]; then
          echo "La ruta /home/ubuntu/skyproject/my-second-great-repository no existe. Abortando el proceso."
          exit 1
        fi

        # Ejecutar los comandos de Docker Compose
        sudo docker-compose -f $(mainDockerComposeFile) down
        sudo docker-compose -f $(mainDockerComposeFile) up -d --build
      EOF
    displayName: 'Execute Deployment Commands for Main'
    condition: eq(variables['Build.SourceBranchName'], 'master')
